"use client";
import { useState } from "react";

const SuggestionOptions = ({ onStartChat }) => {
  const [tooltipText, setTooltipText] = useState("");
  const [tooltipVisible, setTooltipVisible] = useState(false);
  const [tooltipStyle, setTooltipStyle] = useState({});

  //TODO: Fix tooltips, don't display on hover
  const handleMouseOver = (e, text) => {
    const rect = e.target.getBoundingClientRect();
    setTooltipText(text);
    setTooltipStyle({
      // left: `${rect.left + window.scrollX}px`,
      // top: `${rect.bottom + window.scrollY}px`,
    });
    setTooltipVisible(true);
  };

  const handleMouseOut = () => {
    setTooltipVisible(false);
  };

  return (
    <div id="suggestion-options-container">
      {/* Tooltip */}
      <div
        className={`suggestion-options-tooltip ${
          tooltipVisible ? "suggestion-options-tooltip-visible" : ""
        }`}
        style={tooltipStyle}
      >
        {tooltipText}
        <div className=".suggestion-options-tooltip-arrow"></div>
      </div>
      {/* Start chat */}
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        id="start-chat-icon"
        onClick={onStartChat}
        onMouseOver={(e) => handleMouseOver(e, "Reply")}
        onMouseOut={handleMouseOut}
        style={{ cursor: "pointer" }}
      >
        <path
          d="M3.27148 11.2144H11.1882C12.8679 11.2144 14.4788 10.5471 15.6665 9.35936C16.8542 8.17163 17.5215 6.56073 17.5215 4.88102V3.29769M3.27148 11.2144L8.02148 6.46435M3.27148 11.2144L8.02148 15.9644"
          stroke="#2C2E3A"
          stroke-width="1.74868"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
      {/* Redo analysis /*/}
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        onMouseOver={(e) => handleMouseOver(e, "Regenerate suggestions")}
        onMouseOut={handleMouseOut}
        style={{ cursor: "pointer" }}
      >
        <path
          d="M16.3317 10.4574C16.1822 11.5973 15.7252 12.6751 15.0097 13.5751C14.2942 14.4751 13.3473 15.1633 12.2704 15.566C11.1935 15.9687 10.0273 16.0707 8.89684 15.861C7.7664 15.6512 6.71438 15.1378 5.85359 14.3756C4.9928 13.6134 4.35572 12.6313 4.01068 11.5346C3.66564 10.4378 3.62565 9.26786 3.89501 8.15013C4.16436 7.0324 4.73289 6.00908 5.53963 5.18991C6.34637 4.37074 7.36088 3.78662 8.47436 3.50021C11.5611 2.70854 14.7562 4.29742 15.9358 7.25825"
          stroke="#2C2E3A"
          stroke-width="1.74868"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M16.3841 3.30029V7.25863H12.4258"
          stroke="#2C2E3A"
          stroke-width="1.74868"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
      {/* Modify generation */}
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="19"
        viewBox="0 0 20 19"
        fill="none"
        onMouseOver={(e) => handleMouseOver(e, "Modify generation")}
        onMouseOut={handleMouseOut}
        style={{ cursor: "pointer" }}
      >
        <g clip-path="url(#clip0_931_6299)">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M14.4531 3.41538C14.4531 3.20925 14.3697 3.01157 14.2213 2.86582C14.0728 2.72007 13.8714 2.63818 13.6615 2.63818C13.4515 2.63818 13.2501 2.72007 13.1017 2.86582C12.9532 3.01157 12.8698 3.20925 12.8698 3.41538V4.19257H3.36979C3.15983 4.19257 2.95847 4.27445 2.81 4.4202C2.66153 4.56596 2.57813 4.76364 2.57812 4.96976C2.57813 5.17589 2.66153 5.37357 2.81 5.51932C2.95847 5.66507 3.15983 5.74696 3.36979 5.74696H12.8698V6.52415C12.8698 6.73027 12.9532 6.92795 13.1017 7.07371C13.2501 7.21946 13.4515 7.30134 13.6615 7.30134C13.8714 7.30134 14.0728 7.21946 14.2213 7.07371C14.3697 6.92795 14.4531 6.73027 14.4531 6.52415V5.74696H16.0365C16.2464 5.74696 16.4478 5.66507 16.5963 5.51932C16.7447 5.37357 16.8281 5.17589 16.8281 4.96976C16.8281 4.76364 16.7447 4.56596 16.5963 4.4202C16.4478 4.27445 16.2464 4.19257 16.0365 4.19257H14.4531V3.41538ZM3.36979 8.85573C3.15983 8.85573 2.95847 8.93761 2.81 9.08336C2.66153 9.22911 2.57813 9.4268 2.57812 9.63292C2.57813 9.83904 2.66153 10.0367 2.81 10.1825C2.95847 10.3282 3.15983 10.4101 3.36979 10.4101H4.95313V11.1873C4.95313 11.3934 5.03653 11.5911 5.185 11.7369C5.33347 11.8826 5.53483 11.9645 5.74479 11.9645C5.95476 11.9645 6.15612 11.8826 6.30458 11.7369C6.45305 11.5911 6.53646 11.3934 6.53646 11.1873V10.4101H16.0365C16.2464 10.4101 16.4478 10.3282 16.5963 10.1825C16.7447 10.0367 16.8281 9.83904 16.8281 9.63292C16.8281 9.4268 16.7447 9.22911 16.5963 9.08336C16.4478 8.93761 16.2464 8.85573 16.0365 8.85573H6.53646V8.07853C6.53646 7.87241 6.45305 7.67473 6.30458 7.52898C6.15612 7.38322 5.95476 7.30134 5.74479 7.30134C5.53483 7.30134 5.33347 7.38322 5.185 7.52898C5.03653 7.67473 4.95313 7.87241 4.95313 8.07853V8.85573H3.36979ZM2.57812 14.2961C2.57812 14.09 2.66153 13.8923 2.81 13.7465C2.95847 13.6008 3.15983 13.5189 3.36979 13.5189H12.8698V12.7417C12.8698 12.5356 12.9532 12.3379 13.1017 12.1921C13.2501 12.0464 13.4515 11.9645 13.6615 11.9645C13.8714 11.9645 14.0728 12.0464 14.2213 12.1921C14.3697 12.3379 14.4531 12.5356 14.4531 12.7417V13.5189H16.0365C16.2464 13.5189 16.4478 13.6008 16.5963 13.7465C16.7447 13.8923 16.8281 14.09 16.8281 14.2961C16.8281 14.5022 16.7447 14.6999 16.5963 14.8456C16.4478 14.9914 16.2464 15.0733 16.0365 15.0733H14.4531V15.8505C14.4531 16.0566 14.3697 16.2543 14.2213 16.4C14.0728 16.5458 13.8714 16.6277 13.6615 16.6277C13.4515 16.6277 13.2501 16.5458 13.1017 16.4C12.9532 16.2543 12.8698 16.0566 12.8698 15.8505V15.0733H3.36979C3.15983 15.0733 2.95847 14.9914 2.81 14.8456C2.66153 14.6999 2.57813 14.5022 2.57812 14.2961Z"
            fill="#2C2E3A"
          />
        </g>
        <defs>
          <clipPath id="clip0_931_6299">
            <rect
              width="19"
              height="18.6526"
              fill="white"
              transform="translate(0.203125 0.305664)"
            />
          </clipPath>
        </defs>
      </svg>
      {/* Text to speech */}
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="19"
        viewBox="0 0 20 19"
        fill="none"
        onMouseOver={(e) => handleMouseOver(e, "Text to speech")}
        onMouseOut={handleMouseOut}
        style={{ cursor: "pointer" }}
      >
        <path
          d="M11.543 3.22102C11.543 3.10638 11.5085 2.99428 11.4439 2.89876C11.3794 2.80323 11.2875 2.72853 11.1799 2.68398C11.0723 2.63944 10.9537 2.62703 10.839 2.64832C10.7242 2.66961 10.6184 2.72365 10.5348 2.80367L7.05897 6.12617H5.01172C4.5393 6.12617 4.08623 6.3104 3.75218 6.63835C3.41814 6.96629 3.23047 7.41107 3.23047 7.87485V11.3606C3.23047 11.8243 3.41814 12.2691 3.75218 12.5971C4.08623 12.925 4.5393 13.1092 5.01172 13.1092H7.05778L10.5336 16.4609C10.6171 16.5412 10.7229 16.5956 10.8377 16.6172C10.9526 16.6387 11.0713 16.6265 11.1791 16.582C11.2869 16.5376 11.379 16.4629 11.4437 16.3673C11.5084 16.2717 11.543 16.1595 11.543 16.0447V3.22102ZM12.8623 6.35583C12.9108 6.29585 12.9709 6.24586 13.0392 6.20871C13.1074 6.17156 13.1825 6.14798 13.26 6.13932C13.3375 6.13066 13.416 6.13708 13.491 6.15823C13.566 6.17938 13.6361 6.21483 13.6971 6.26257L13.6995 6.26373L13.7018 6.26606L13.7078 6.27073L13.7256 6.28588L13.7802 6.33251C13.8238 6.37137 13.88 6.42655 13.9488 6.49806C14.083 6.64145 14.2576 6.85012 14.4298 7.12758C14.7753 7.68716 15.1102 8.51837 15.1102 9.6317C15.1102 10.7439 14.7753 11.5762 14.4298 12.1358C14.2912 12.3612 14.1301 12.5725 13.9488 12.7665C13.8726 12.8463 13.7925 12.9226 13.709 12.995L13.6995 13.0032H13.6983C13.6983 13.0032 13.1675 13.2864 12.8635 12.9122C12.7657 12.7922 12.7202 12.639 12.7369 12.4862C12.7536 12.3334 12.8311 12.1932 12.9525 12.0962L12.9549 12.0938L12.9763 12.0752C12.9984 12.0558 13.0321 12.0227 13.0772 11.9761C13.2044 11.839 13.3174 11.6898 13.4145 11.5308C13.6638 11.1286 13.9227 10.5025 13.9227 9.63053C13.9227 8.75852 13.6638 8.13482 13.4145 7.73379C13.2922 7.53606 13.1454 7.35397 12.9775 7.1917L12.9561 7.17305C12.8336 7.07668 12.7549 6.9366 12.7374 6.78345C12.7198 6.6303 12.7647 6.47655 12.8623 6.35583ZM14.8834 3.93099C14.8226 3.8816 14.7524 3.8446 14.6769 3.82216C14.6014 3.79971 14.5221 3.79227 14.4436 3.80026C14.3651 3.80826 14.289 3.83152 14.2198 3.86871C14.1506 3.9059 14.0896 3.95625 14.0405 4.01684C13.9913 4.07742 13.9549 4.14702 13.9335 4.22156C13.912 4.29611 13.9059 4.3741 13.9155 4.45098C13.9251 4.52787 13.9502 4.6021 13.9894 4.66935C14.0286 4.7366 14.081 4.79551 14.1436 4.84263L14.1567 4.85429L14.2184 4.90675C14.2754 4.95572 14.355 5.03149 14.4571 5.13408C14.659 5.34043 14.9321 5.65053 15.2052 6.05972C15.7515 6.87694 16.2977 8.08003 16.2977 9.63753C16.3024 10.9086 15.9221 12.1523 15.2052 13.2107C14.9321 13.6187 14.659 13.9265 14.4571 14.1316C14.3615 14.2291 14.2617 14.3225 14.1578 14.4114L14.1448 14.4231H14.1436C14.0238 14.5205 13.9476 14.6601 13.9316 14.812C13.9155 14.9639 13.9608 15.1159 14.0578 15.2354C14.1547 15.3548 14.2955 15.4321 14.4499 15.4507C14.6043 15.4693 14.76 15.4277 14.8834 15.3347L14.9226 15.3033L15.0117 15.2275C15.0865 15.161 15.1898 15.0666 15.3121 14.9419C15.6415 14.6061 15.938 14.2408 16.198 13.8507C17.0415 12.602 17.4891 11.1359 17.484 9.63753C17.4872 8.13802 17.0398 6.6709 16.198 5.4197C15.938 5.02924 15.6418 4.66318 15.3133 4.32619C15.1891 4.19963 15.0591 4.07866 14.9238 3.96363L14.8965 3.94148L14.8882 3.93448L14.8858 3.93215L14.8834 3.93099Z"
          fill="#2C2E3A"
        />
      </svg>
    </div>
  );
};

export default SuggestionOptions;
